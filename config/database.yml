# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"

default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: volcano_api_development
  username:  myapp
  password: <%= ENV.fetch("VOLCANO_API_DEVELOPMENT_PASSWORD", "let me in") %>
  host: localhost
  # port: 5432 # Uncomment if using a custom port

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: volcano_api_test
  username:  myapp
  password: <%= ENV.fetch("VOLCANO_API_TEST_PASSWORD", "let me in") %>
  host: localhost

production:
  primary: &primary_production
    <<: *default
    database: volcano_api_production
    username: myapp
    password: <%= ENV["VOLCANO_API_DATABASE_PASSWORD"] %>
  cache:
    <<: *primary_production
    database: volcano_api_production_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_production
    database: volcano_api_production_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_production
    database: volcano_api_production_cable
    migrations_paths: db/cable_migrate